// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;

@include mat.core();
// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$VT-HTBH-Admin-primary: mat.define-palette(mat.$indigo-palette, 500);
$VT-HTBH-Admin-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$VT-HTBH-Admin-warn: mat.define-palette(mat.$red-palette);
// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$VT-HTBH-Admin-theme: mat.define-light-theme((
    color: ( primary: $VT-HTBH-Admin-primary, accent: $VT-HTBH-Admin-accent, warn: $VT-HTBH-Admin-warn, ),
   ));
// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($VT-HTBH-Admin-theme);

/* You can add global styles to this file, and also import other style files */

@font-face {
    font-family: "San-Francisco";
    src: url("assets/font/Font-Regular.ttf");
}

@import './themes/root-color.scss';
@import './themes/global-class.scss';
html,
body {
    font-family: "San-Francisco";
    margin: 0px;
    height: 100%;
}

.mat-dialog-container {
    padding: 0px !important;
}